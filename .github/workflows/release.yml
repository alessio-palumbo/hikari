name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    env:
      CGO_ENABLED: 0

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Set build variables
        id: vars
        run: |
          echo "VERSION=$(git describe --tags --always || echo dev)" >> $GITHUB_ENV
          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV

      - name: Build binary
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" == "windows" ]; then EXT=".exe"; fi

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -o dist/hikari-${{ matrix.goos }}-${{ matrix.goarch }}$EXT \
            -ldflags "-s -w \
              -X github.com/alessio-palumbo/hikari/cmd/hikari-cli/internal/version.Version=$VERSION \
              -X github.com/alessio-palumbo/hikari/cmd/hikari-cli/internal/version.Commit=$COMMIT \
              -X github.com/alessio-palumbo/hikari/cmd/hikari-cli/internal/version.BuildTime=$BUILD_TIME" \
            ./cmd/hikari-cli/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hikari-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: dist/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
